<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="developed_by" xml:space="preserve">
    <value>File Cabinet Application, developed by {0}</value>
  </data>
  <data name="console" xml:space="preserve">
    <value>&gt; </value>
  </data>
  <data name="stat" xml:space="preserve">
    <value>{0} record(s), {1} deleted.</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>Record #{0} is created</value>
  </data>
  <data name="exit" xml:space="preserve">
    <value>Exiting an application...</value>
  </data>
  <data name="first_name" xml:space="preserve">
    <value>First name: </value>
  </data>
  <data name="last_name" xml:space="preserve">
    <value>Last name: </value>
  </data>
  <data name="date_of_birth" xml:space="preserve">
    <value>Date of birth: </value>
  </data>
  <data name="job_experience" xml:space="preserve">
    <value>Job experience: </value>
  </data>
  <data name="wage" xml:space="preserve">
    <value>Wage: </value>
  </data>
  <data name="rank" xml:space="preserve">
    <value>Rank: </value>
  </data>
  <data name="hint" xml:space="preserve">
    <value>Enter your command, or enter 'help' to get help.</value>
  </data>
  <data name="ReadInput_Conversion_failed" xml:space="preserve">
    <value>Conversion failed: {0}. Please, correct your input.</value>
  </data>
  <data name="Export_File_is_exist" xml:space="preserve">
    <value>File is exist - rewrite {0}? [Y/n]</value>
  </data>
  <data name="All_records_are_exported_to_file" xml:space="preserve">
    <value>All records are exported to file {0}</value>
  </data>
  <data name="records_were_written_to" xml:space="preserve">
    <value>{0} records were written to {1}</value>
  </data>
  <data name="method_execution_duration_ticks" xml:space="preserve">
    <value>{0} method execution duration is {1} ticks.</value>
  </data>
  <data name="ImportCommandHandler_The_format_is_not_supported" xml:space="preserve">
    <value>The format {0} is not supported</value>
  </data>
  <data name="Records_are_deleted" xml:space="preserve">
    <value>Record #{0} are deleted</value>
  </data>
  <data name="Records_0_where_updated" xml:space="preserve">
    <value>Records #{0} where updated</value>
  </data>
  <data name="ErrorCommandHandler_Handle_Is_Not_A_Command" xml:space="preserve">
    <value>'{0}' is not a command. See 'help'.
</value>
  </data>
  <data name="The_most_similar_commands_are" xml:space="preserve">
    <value>The most similar commands are</value>
  </data>
  <data name="File_is_not_exist" xml:space="preserve">
    <value>Cannot open file from {0}. File is not exist</value>
  </data>
  <data name="Export_format_cannot_be_null" xml:space="preserve">
    <value>Export format cannot be null</value>
  </data>
  <data name="Export_type_is_not_supported" xml:space="preserve">
    <value>{0}-export is not supported</value>
  </data>
  <data name="Answer_must_be_either_Y_or_n" xml:space="preserve">
    <value>Answer must be either Y or n</value>
  </data>
  <data name="Cant_deserialize" xml:space="preserve">
    <value>Error: cant deserialize {0}! {1}: {2}</value>
  </data>
  <data name="Record_at_line_Error" xml:space="preserve">
    <value>Record at line {0} Error: {1}</value>
  </data>
  <data name="Error__wrong_conversion" xml:space="preserve">
    <value>{0} Error: wrong conversion</value>
  </data>
  <data name="missing_one_parameter" xml:space="preserve">
    <value>{0} missing one parameter</value>
  </data>
  <data name="Wrong_data_format" xml:space="preserve">
    <value>Wrong data format</value>
  </data>
  <data name="Record_number_error" xml:space="preserve">
    <value>Record #{0}: {1}</value>
  </data>
  <data name="Cannot_find_keyword" xml:space="preserve">
    <value>Cannot find key word '{0}'</value>
  </data>
  <data name="Number_of_keys_doesnt_correspond_to_number_of_values" xml:space="preserve">
    <value>Number of keys doesnt correspond to number of values</value>
  </data>
  <data name="Parameter_values_should_be_enclosed_in_brackets" xml:space="preserve">
    <value>Parameter values should be enclosed in brackets</value>
  </data>
  <data name="Record_with_id_is_already_exist" xml:space="preserve">
    <value>Record with id = '{0}' is already exist</value>
  </data>
  <data name="Id_cannot_be_updated" xml:space="preserve">
    <value>Id cannot be updated</value>
  </data>
  <data name="Id_is_less_than_zero" xml:space="preserve">
    <value>Id is less than zero</value>
  </data>
  <data name="The_name_is_null_or_whitespace" xml:space="preserve">
    <value>The name is null or whitespace</value>
  </data>
  <data name="NameWrongLength" xml:space="preserve">
    <value>The name's length is less than minimal or greater than it's maximal value</value>
  </data>
  <data name="The_name_contains_non_letter_characters" xml:space="preserve">
    <value>The name contains non-letter characters</value>
  </data>
  <data name="Date_Of_Birth_Is_Less_Than_Minimal" xml:space="preserve">
    <value>The date of birth is less than it`s minimal value</value>
  </data>
  <data name="Date_Of_Birth_Is_Greater_Than_Maximal" xml:space="preserve">
    <value>The date of birth is greater than it`s maximal value</value>
  </data>
  <data name="Job_Experience_Is_Less_Than_Minimal" xml:space="preserve">
    <value>The job experience is less than it`s minimal value</value>
  </data>
  <data name="JobExperience_Is_Greater_Than_Maximal" xml:space="preserve">
    <value>The job experience is greater than it`s minimal value</value>
  </data>
  <data name="Salary_Is_Less_Than_Minimal" xml:space="preserve">
    <value>Wage is less than it`s minimal value</value>
  </data>
  <data name="Salary_Is_Greater_Than_Maximal" xml:space="preserve">
    <value>Wage is greater than it`s maximal value</value>
  </data>
  <data name="Rank_Is_Not_Defined_In_Grades" xml:space="preserve">
    <value>Rank is not defined in current grades</value>
  </data>
  <data name="Action_Message" xml:space="preserve">
    <value>{0} - Calling method {1}()</value>
  </data>
  <data name="Method_With_Parameter_Message" xml:space="preserve">
    <value>{0} - Calling method {1}() with parameter '{2}'</value>
  </data>
  <data name="Method_With_Return_Value_Message" xml:space="preserve">
    <value>{0} - method {1}() return '{2}'</value>
  </data>
  <data name="Service_And_Validator_info" xml:space="preserve">
    <value>Service = {0}, Validator = {1}</value>
  </data>
</root>